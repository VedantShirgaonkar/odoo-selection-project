datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  email         String   @unique
  password      String
  name          String
  points        Int      @default(0)
  isAdmin       Boolean  @default(false)
  items         Item[]
  swapRequests  SwapRequest[]
  userSwaps     UserSwap[]
  createdAt     DateTime @default(now())
}

model Item {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  category    String
  type        String
  size        String
  condition   String
  tags        String[]
  images      String[]
  uploaderId  String   @db.ObjectId
  uploader    User     @relation(fields: [uploaderId], references: [id])
  status      ItemStatus @default(AVAILABLE)
  swapRequests SwapRequest[]
  createdAt   DateTime @default(now())
}

enum ItemStatus {
  AVAILABLE
  PENDING
  SWAPPED
  REDEEMED
  REJECTED
}

model SwapRequest {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    String   @db.ObjectId
  requester User     @relation(fields: [requesterId], references: [id])
  requesterId String   @db.ObjectId
  type      SwapType
  status    RequestStatus @default(PENDING)
  createdAt DateTime @default(now())
}

enum SwapType {
  DIRECT
  POINTS
}

enum RequestStatus {
  PENDING
  ACCEPTED
  REJECTED
  COMPLETED
}

model Swap {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  itemIds   String[]
  userSwaps UserSwap[]
  type      SwapType
  createdAt DateTime @default(now())
}

model UserSwap {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  user    User     @relation(fields: [userId], references: [id])
  userId  String   @db.ObjectId
  swap    Swap     @relation(fields: [swapId], references: [id])
  swapId  String   @db.ObjectId
}

